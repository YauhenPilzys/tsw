# Generated by Django 5.1.3 on 2025-01-10 13:39

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Parking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Примечание')),
            ],
            options={
                'verbose_name': 'Парковка',
                'verbose_name_plural': 'Парковки',
            },
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_place', models.CharField(choices=[('load', 'Загрузка'), ('unload', 'Выгрузка')], max_length=50, verbose_name='Статус ')),
                ('type', models.CharField(max_length=100, verbose_name='Тип места')),
                ('characteristic', models.CharField(max_length=100, verbose_name='Характеристика места')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Примечание')),
            ],
            options={
                'verbose_name': 'Место складирования',
                'verbose_name_plural': 'Места складирования',
            },
        ),
        migrations.CreateModel(
            name='ServiceOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена')),
                ('price_nds', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена с НДС')),
                ('price_invoice', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена по инвойсу')),
                ('description_service', models.TextField(verbose_name='Описание услуги')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Примечание')),
                ('currency', models.CharField(choices=[('RUB', 'российский рубль'), ('BYN', 'белорусский рубль'), ('EUR', 'евро'), ('USD', 'доллар сша'), ('LVL', 'латвийский лат'), ('KZT', 'казахстанский тенге'), ('UAH', 'украинская гривна')], max_length=3, verbose_name='Валюта')),
            ],
            options={
                'verbose_name': 'Заказ услуги',
                'verbose_name_plural': 'Заказы услуг',
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('address', models.TextField(blank=True, null=True, verbose_name='Адрес')),
                ('postal_code', models.CharField(max_length=20, verbose_name='Индекс')),
                ('phone', models.CharField(max_length=20, verbose_name='Телефон')),
                ('city', models.CharField(max_length=100, verbose_name='Город')),
                ('tax_number', models.CharField(max_length=20, verbose_name='Номер налогоплательщика')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Примечание')),
            ],
            options={
                'verbose_name': 'Поставщик',
                'verbose_name_plural': 'Поставщики',
            },
        ),
        migrations.CreateModel(
            name='Transport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ts', models.CharField(blank=True, max_length=20, unique=True, verbose_name='Номер транспортного средства')),
                ('type_ts', models.CharField(blank=True, choices=[('100', 'Водное судно'), ('201', 'Паровоз'), ('202', 'Электровоз'), ('203', 'Электропоезд'), ('204', 'Тепловоз'), ('205', 'Дизель-поезд'), ('206', 'Путевая машина'), ('207', 'Вагон пассажирский'), ('208', 'Вагон багажный'), ('209', 'Вагон изотермический'), ('210', 'Цистерна'), ('211', 'Полувагон'), ('212', 'Платформа'), ('298', 'Прочий вагон'), ('301', 'Легковой автомобиль общего назначения (пассажирский автомобиль с числом мест для сидения не более 9, включая место водителя, без специального оборудования)'), ('302', 'Специальный легковой автомобиль (пассажирский автомобиль с числом мест для сидения не более 9, включая место водителя, со специальным оборудованием)'), ('303', 'Грузовой автомобиль общего назначения (автомобиль, конструкция и оборудование которого предназначены для перевозки грузов, с бортовой платформой, не оборудованный средствами самопогрузки-саморазгрузки или другим специальным оборудованием)'), ('304', 'Специальный грузовой автомобиль (автомобиль, конструкция и оборудование которого предназначены для перевозки грузов, оборудованный средствами самопогрузки-саморазгрузки или другим специальным оборудованием и (или) предназначенный для перевозки грузов конкретных категорий)'), ('305', 'Грузопассажирский автомобиль (автомобиль, конструкция и оборудование которого предназначены для перевозки грузов и пассажиров)'), ('306', 'Автомобиль-тягач (автомобиль, конструкция и оборудование которого предназначены исключительно для буксирования дорожных транспортных средств, за исключением полуприцепов)'), ('307', 'Седельный тягач (автомобиль, конструкция и оборудование которого предназначены для буксирования полуприцепа)'), ('308', 'Пассажирский прицеп, технически допустимая максимальная масса которого не более 0,75 т (транспортное средство без двигателя, конструкция и оборудование которого предназначены для перевозки пассажиров и багажа, вертикальная нагрузка которого передается на опорную поверхность через колеса и которое приспособлено для буксирования автомобилем, с установленной изготовителем максимальной массой со снаряжением, пассажирами и грузом не более 0,75т . В случае полуприцепов и прицепов с центрально расположенной осью (осями) под технически допустимой максимальной массой принимается статическая вертикальная нагрузка, передаваемая на грунт осью или осями максимально загруженного сцепленного с тягачом полуприцепа и прицепа с центрально расположенной осью (осями))'), ('309', 'Пассажирский прицеп, технически допустимая максимальная масса которого свыше 0,75 т, но не более 3,5 т (транспортное средство без двигателя, конструкция и оборудование которого предназначены для перевозки пассажиров и багажа, вертикальная нагрузка которого передается на опорную поверхность через колеса и которое приспособлено для буксирования автомобилем, с установленной изготовителем максимальной массой со снаряжением, пассажирами и грузом свыше 0,75 т, но не более 3,5 т . В случае полуприцепов и прицепов с центрально расположенной осью (осями) под технически допустимой максимальной массой принимается статическая вертикальная нагрузка, передаваемая на грунт осью или осями максимально загруженного сцепленного с тягачом полуприцепа и прицепа с центрально расположенной осью (осями))'), ('310', 'Пассажирский прицеп, технически допустимая максимальная масса которого свыше 3,5 т, но не более 10 т (транспортное средство без двигателя, конструкция и оборудование которого предназначены для перевозки пассажиров и багажа, вертикальная нагрузка которого передается на опорную поверхность через колеса и которое приспособлено для буксирования автомобилем, с установленной изготовителем максимальной массой вместе со снаряжением, пассажирами и грузом свыше 3,5 т, но не более 10 т . В случае полуприцепов и прицепов с центрально расположенной осью (осями) под технически допустимой максимальной массой принимается статическая вертикальная нагрузка, передаваемая на грунт осью или осями максимально загруженного сцепленного с тягачом полуприцепа и прицепа с центрально расположенной осью (осями))'), ('311', 'Пассажирский прицеп, технически допустимая максимальная масса которого более 10 т (транспортное средство без двигателя, конструкция и оборудование которого предназначены для перевозки пассажиров и багажа, вертикальная нагрузка которого передается на опорную поверхность через колеса и которое приспособлено для буксирования автомобилем, с установленной изготовителем максимальной массой вместе со снаряжением, пассажирами и грузом более 10 т. В случае полуприцепов и прицепов с центрально расположенной осью (осями) под технически допустимой максимальной массой принимается статическая вертикальная нагрузка, передаваемая на грунт осью или осями максимально загруженного сцепленного с тягачом полуприцепа и прицепа с центрально расположенной осью (осями))'), ('312', 'Грузовой прицеп общего назначения (транспортное средство без двигателя, предназначенное для перевозки пассажиров или грузов, вертикальная нагрузка которого передается на опорную поверхность через колеса и которое приспособлено для буксирования автомобилем, с бортовой платформой открытого или закрытого типа, не оборудованный средствами самопогрузки-саморазгрузки или другим специальным оборудованием)'), ('313', 'Специальный прицеп (транспортное средство без двигателя, предназначенное для перевозки пассажиров или грузов, вертикальная нагрузка которого передается на опорную поверхность через колеса и которое приспособлено для буксирования автомобилем, конструкция и оборудование которого предназначены для выполнения специальных рабочих функций или перевозки грузов определенных категорий)'), ('314', 'Караван (транспортное средство без двигателя, предназначенное для перевозки пассажиров или грузов, вертикальная нагрузка которого передается на опорную поверхность через колеса и которое приспособлено для буксирования автомобилем, предназначенный для использования в дорожных условиях во время стоянок в качестве мобильного жилого помещения)'), ('315', 'Пассажирский полуприцеп, технически допустимая максимальная масса которого не более 0,75 т (прицеп, конструкция которого предназначена для использования с седельным тягачом, часть полной массы которого передается на седельный тягач через седельно-сцепное устройство; конструкция и оборудование которого предназначены для перевозки людей и багажа; с установленной изготовителем максимальной массой вместе со снаряжением, пассажирами и грузом не более 0,75 т. В случае полуприцепов и прицепов с центрально расположенной осью (осями) под технически допустимой максимальной массой принимается статическая вертикальная нагрузка, передаваемая на грунт осью или осями максимально загруженного сцепленного с тягачом полуприцепа и прицепа с центрально расположенной осью (осями))'), ('316', 'Пассажирский полуприцеп, технически допустимая максимальная масса которого свыше 0,75 т, но не более 3,5 т (прицеп, конструкция которого предназначена для использования с седельным тягачом, часть полной массы которого передается на седельный тягач через седельно-сцепное устройство; конструкция и оборудование которого предназначены для перевозки людей и багажа; с установленной изготовителем максимальной массой вместе со снаряжением, пассажирами и грузом свыше 0,75 т, но не более 3,5 т. В случае полуприцепов и прицепов с центрально расположенной осью (осями) под технически допустимой максимальной массой принимается статическая вертикальная нагрузка, передаваемая на грунт осью или осями максимально загруженного сцепленного с тягачом полуприцепа и прицепа с центрально расположенной осью (осями))'), ('317', 'Пассажирский полуприцеп, технически допустимая максимальная масса которого свыше 3,5 т, но не более 10 т (прицеп, конструкция которого предназначена для использования с седельным тягачом, часть полной массы которого передается на седельный тягач через седельно-сцепное устройство; конструкция и оборудование которого предназначены для перевозки людей и багажа; с установленной изготовителем максимальной массой вместе со снаряжением, пассажирами и грузом свыше 3,5 т, но не более 10 т. В случае полуприцепов и прицепов с центрально расположенной осью (осями) под технически допустимой максимальной массой принимается статическая вертикальная нагрузка, передаваемая на грунт осью или осями максимально загруженного сцепленного с тягачом полуприцепа и прицепа с центрально расположенной осью (осями))'), ('318', 'Пассажирский полуприцеп, технически допустимая максимальная масса которого более 10 т (прицеп, конструкция которого предназначена для использования с седельным тягачом, часть полной массы которого передается на седельный тягач через седельно-сцепное устройство; конструкция и оборудование которого предназначены для перевозки людей и багажа; с установленной изготовителем максимальной массой вместе со снаряжением, пассажирами и грузом более 10 т.  В случае полуприцепов и прицепов с центрально расположенной осью (осями) под технически допустимой максимальной массой принимается статическая вертикальная нагрузка, передаваемая на грунт осью или осями максимально загруженного сцепленного с тягачом полуприцепа и прицепа с центрально расположенной осью (осями))'), ('319', 'Грузовой полуприцеп общего назначения (прицеп, конструкция которого предназначена для использования с седельным тягачом, часть полной массы которого передается на седельный тягач через седельно-сцепное устройство, с бортовой платформой закрытого или открытого типа, не оборудованный средствами самопогрузки-саморазгрузки или другим специальным оборудованием)'), ('320', 'Специальный полуприцеп (прицеп, конструкция которого предназначена для использования с седельным тягачом, часть полной массы которого передается на седельный тягач через седельно-сцепное устройство, конструкция и оборудование которого предназначены для выполнения специальных рабочих функций или перевозки грузов определенных категорий)'), ('321', 'Автобус общего назначения (пассажирский автомобиль с числом мест для сидения более 9, включая место водителя, предназначенный для перевозки пассажиров и используемый в качестве общественного транспорта (по маршрутам)'), ('322', 'Специальный автобус (пассажирский автомобиль с числом мест для сидения более 9, включая место водителя, со специальным оборудованием, предназначенный в основном для перевозки пассажиров определенных категорий или профессий.К таким автобусам относятся, например, автобус для перевозки инвалидов, катафалк)'), ('323', 'Сочлененный автобус (пассажирский автомобиль с числом мест для сидения более 9, включая место водителя, состоящий из 2 или более жестких шарнирно соединенных между собой секций так, что обеспечивается перемещение пассажиров из одной секции в другую)'), ('324', 'Микроавтобус (одноэтажный пассажирский автомобиль с числом мест для сидения более 9, но не более 17, включая место водителя)'), ('400', 'Воздушное судно'), ('901', 'Контейнер')], max_length=3, verbose_name='Тип')),
                ('country', models.CharField(blank=True, choices=[('00', 'не определен'), ('AF', 'АФГАНИСТАН'), ('AL', 'АЛБАНИЯ'), ('AQ', 'АНТАРКТИДА'), ('DZ', 'АЛЖИР'), ('AS', 'АМЕРИКАНСКОЕ САМОА'), ('AD', 'АНДОРРА'), ('AO', 'АНГОЛА'), ('AG', 'АНТИГУА И БАРБУДА'), ('AZ', 'АЗЕРБАЙДЖАН'), ('AR', 'АРГЕНТИНА'), ('AU', 'АВСТРАЛИЯ'), ('AT', 'АВСТРИЯ'), ('BS', 'БАГАМЫ'), ('BH', 'БАХРЕЙН'), ('BD', 'БАНГЛАДЕШ'), ('AM', 'АРМЕНИЯ'), ('BB', 'БАРБАДОС'), ('BE', 'БЕЛЬГИЯ'), ('BM', 'БЕРМУДЫ'), ('BT', 'БУТАН'), ('BO', 'БОЛИВИЯ (МНОГОНАЦИОНАЛЬНОЕ ГОСУДАРСТВО)'), ('BA', 'БОСНИЯ И ГЕРЦЕГОВИНА'), ('BW', 'БОТСВАНА'), ('BV', 'ОСТРОВ БУВЕ'), ('BR', 'БРАЗИЛИЯ'), ('BZ', 'БЕЛИЗ'), ('IO', 'БРИТАНСКАЯ ТЕРРИТОРИЯ В ИНДИЙСКОМ ОКЕАНЕ'), ('SB', 'СОЛОМОНОВЫ ОСТРОВА'), ('VG', 'ВИРГИНСКИЕ ОСТРОВА (БРИТАНСКИЕ)'), ('BN', 'БРУНЕЙ-ДАРУССАЛАМ'), ('BG', 'БОЛГАРИЯ'), ('MM', 'МЬЯНМА'), ('BI', 'БУРУНДИ'), ('EU', 'ЕВРОСОЮЗ'), ('BY', 'БЕЛАРУСЬ'), ('KH', 'КАМБОДЖА'), ('CM', 'КАМЕРУН'), ('CA', 'КАНАДА'), ('CV', 'КАБО-ВЕРДЕ'), ('KY', 'ОСТРОВА КАЙМАН'), ('CF', 'ЦЕНТРАЛЬНО-АФРИКАНСКАЯ РЕСПУБЛИКА'), ('LK', 'ШРИ-ЛАНКА'), ('TD', 'ЧАД'), ('CL', 'ЧИЛИ'), ('CN', 'КИТАЙ'), ('TW', 'ТАЙВАНЬ (КИТАЙ)'), ('CX', 'ОСТРОВ РОЖДЕСТВА'), ('CC', 'КОКОСОВЫЕ (КИЛИНГ) ОСТРОВА'), ('CO', 'КОЛУМБИЯ'), ('KM', 'КОМОРЫ'), ('YT', 'МАЙОТТА'), ('CG', 'КОНГО'), ('CD', 'КОНГО, ДЕМОКРАТИЧЕСКАЯ РЕСПУБЛИКА'), ('CK', 'ОСТРОВА КУКА'), ('CR', 'КОСТА-РИКА'), ('HR', 'ХОРВАТИЯ'), ('CU', 'КУБА'), ('CY', 'КИПР'), ('CZ', 'ЧЕХИЯ'), ('BJ', 'БЕНИН'), ('DK', 'ДАНИЯ'), ('DM', 'ДОМИНИКА'), ('DO', 'ДОМИНИКАНСКАЯ РЕСПУБЛИКА'), ('EC', 'ЭКВАДОР'), ('SV', 'ЭЛЬ-САЛЬВАДОР'), ('GQ', 'ЭКВАТОРИАЛЬНАЯ ГВИНЕЯ'), ('ET', 'ЭФИОПИЯ'), ('ER', 'ЭРИТРЕЯ'), ('EE', 'ЭСТОНИЯ'), ('FO', 'ФАРЕРСКИЕ ОСТРОВА'), ('FK', 'ФОЛКЛЕНДСКИЕ ОСТРОВА (МАЛЬВИНСКИЕ)'), ('GS', 'ЮЖН.ДЖОРДЖИЯ И ЮЖН.САНДВИЧ.ОСТРОВА'), ('FJ', 'ФИДЖИ'), ('FI', 'ФИНЛЯНДИЯ'), ('AX', 'ЭЛАНДСКИЕ ОСТРОВА'), ('FR', 'ФРАНЦИЯ'), ('GF', 'ФРАНЦУЗСКАЯ ГВИАНА'), ('PF', 'ФРАНЦУЗСКАЯ ПОЛИНЕЗИЯ'), ('TF', 'ФРАНЦУЗСКИЕ ЮЖНЫЕ ТЕРРИТОРИИ'), ('DJ', 'ДЖИБУТИ'), ('GA', 'ГАБОН'), ('GE', 'ГРУЗИЯ'), ('GM', 'ГАМБИЯ'), ('PS', 'ПАЛЕСТИНА, ГОСУДАРСТВО'), ('DE', 'ГЕРМАНИЯ'), ('GH', 'ГАНА'), ('GI', 'ГИБРАЛТАР'), ('KI', 'КИРИБАТИ'), ('GR', 'ГРЕЦИЯ'), ('GL', 'ГРЕНЛАНДИЯ'), ('GD', 'ГРЕНАДА'), ('GP', 'ГВАДЕЛУПА'), ('GU', 'ГУАМ'), ('GT', 'ГВАТЕМАЛА'), ('GN', 'ГВИНЕЯ'), ('GY', 'ГАЙАНА'), ('HT', 'ГАИТИ'), ('HM', 'ОСТРОВ ХЕРД И ОСТРОВА МАКДОНАЛЬД'), ('VA', 'ПАПСКИЙ ПРЕСТОЛ(ГОС.-ГОРОД ВАТИКАН)'), ('HN', 'ГОНДУРАС'), ('HK', 'ГОНКОНГ'), ('HU', 'ВЕНГРИЯ'), ('IS', 'ИСЛАНДИЯ'), ('IN', 'ИНДИЯ'), ('ID', 'ИНДОНЕЗИЯ'), ('IR', 'ИРАН (ИСЛАМСКАЯ РЕСПУБЛИКА)'), ('IQ', 'ИРАК'), ('IE', 'ИРЛАНДИЯ'), ('IL', 'ИЗРАИЛЬ'), ('IT', 'ИТАЛИЯ'), ('CI', 'КОТ Д_ИВУАР'), ('JM', 'ЯМАЙКА'), ('JP', 'ЯПОНИЯ'), ('KZ', 'КАЗАХСТАН'), ('JO', 'ИОРДАНИЯ'), ('KE', 'КЕНИЯ'), ('KP', 'КОРЕЯ (НАРОДНО-ДЕМОКРАТИЧ. РЕСПУБЛИКА)'), ('KR', 'КОРЕЯ, РЕСПУБЛИКА'), ('KW', 'КУВЕЙТ'), ('KG', 'КЫРГЫЗСТАН'), ('LA', 'ЛАОССКАЯ НАРОДНО-ДЕМОКРАТИЧ. РЕСПУБЛИКА'), ('LB', 'ЛИВАН'), ('LS', 'ЛЕСОТО'), ('LV', 'ЛАТВИЯ'), ('LR', 'ЛИБЕРИЯ'), ('LY', 'ЛИВИЯ'), ('LI', 'ЛИХТЕНШТЕЙН'), ('LT', 'ЛИТВА'), ('LU', 'ЛЮКСЕМБУРГ'), ('MO', 'МАКАО'), ('MG', 'МАДАГАСКАР'), ('MW', 'МАЛАВИ'), ('MY', 'МАЛАЙЗИЯ'), ('MV', 'МАЛЬДИВЫ'), ('ML', 'МАЛИ'), ('MT', 'МАЛЬТА'), ('MQ', 'МАРТИНИКА'), ('MR', 'МАВРИТАНИЯ'), ('MU', 'МАВРИКИЙ'), ('MX', 'МЕКСИКА'), ('MC', 'МОНАКО'), ('MN', 'МОНГОЛИЯ'), ('MD', 'МОЛДОВА, РЕСПУБЛИКА'), ('ME', 'ЧЕРНОГОРИЯ'), ('MS', 'МОНТСЕРРАТ'), ('MA', 'МАРОККО'), ('MZ', 'МОЗАМБИК'), ('OM', 'ОМАН'), ('NA', 'НАМИБИЯ'), ('NR', 'НАУРУ'), ('NP', 'НЕПАЛ'), ('NL', 'НИДЕРЛАНДЫ'), ('CW', 'КЮРАСАО'), ('AW', 'АРУБА'), ('SX', 'СЕН-МАРТЕН (нидерландская часть)'), ('BQ', 'БОНЭЙР, СИНТ-ЭСТАТИУС И САБА'), ('NC', 'НОВАЯ КАЛЕДОНИЯ'), ('VU', 'ВАНУАТУ'), ('NZ', 'НОВАЯ ЗЕЛАНДИЯ'), ('NI', 'НИКАРАГУА'), ('NE', 'НИГЕР'), ('NG', 'НИГЕРИЯ'), ('NU', 'НИУЭ'), ('NF', 'ОСТРОВ НОРФОЛК'), ('NO', 'НОРВЕГИЯ'), ('MP', 'СЕВЕРНЫЕ МАРИАНСКИЕ ОСТРОВА'), ('UM', 'МАЛЫЕ ТИХООКЕАН.ОТДАЛЕН.ОСТ-ВА С.Ш.'), ('FM', 'МИКРОНЕЗИЯ (ФЕДЕРАТИВНЫЕ ШТАТЫ)'), ('MH', 'МАРШАЛЛОВЫ ОСТРОВА'), ('PW', 'ПАЛАУ'), ('PK', 'ПАКИСТАН'), ('PA', 'ПАНАМА'), ('PG', 'ПАПУА НОВАЯ ГВИНЕЯ'), ('PY', 'ПАРАГВАЙ'), ('PE', 'ПЕРУ'), ('PH', 'ФИЛИППИНЫ'), ('PN', 'ПИТКЭРН'), ('PL', 'ПОЛЬША'), ('PT', 'ПОРТУГАЛИЯ'), ('GW', 'ГВИНЕЯ-БИСАУ'), ('TL', 'ТИМОР-ЛЕСТЕ'), ('PR', 'ПУЭРТО-РИКО'), ('QA', 'КАТАР'), ('RE', 'РЕЮНЬОН'), ('RO', 'РУМЫНИЯ'), ('RU', 'РОССИЯ'), ('RW', 'РУАНДА'), ('BL', 'СЕН-БАРТЕЛЕМИ'), ('SH', 'СВ. ЕЛЕНА, О. ВОЗНЕСЕНИЯ, ТР.-ДА-КУНЬЯ'), ('KN', 'СЕНТ-КИТС И НЕВИС'), ('AI', 'АНГИЛЬЯ'), ('LC', 'СЕНТ-ЛЮСИЯ'), ('MF', 'СЕН-МАРТЕН (ФРАНЦУЗСКАЯ ЧАСТЬ)'), ('PM', 'СЕНТ-ПЬЕР И МИКЕЛОН'), ('VC', 'СЕНТ-ВИНСЕНТ И ГРЕНАДИНЫ'), ('SM', 'САН-МАРИНО'), ('ST', 'САН-ТОМЕ И ПРИНСИПИ'), ('SA', 'САУДОВСКАЯ АРАВИЯ'), ('SN', 'СЕНЕГАЛ'), ('RS', 'СЕРБИЯ'), ('SC', 'СЕЙШЕЛЫ'), ('SL', 'СЬЕРРА-ЛЕОНЕ'), ('SG', 'СИНГАПУР'), ('SK', 'СЛОВАКИЯ'), ('VN', 'ВЬЕТНАМ'), ('SI', 'СЛОВЕНИЯ'), ('SO', 'СОМАЛИ'), ('ZA', 'ЮЖНАЯ АФРИКА'), ('ZW', 'ЗИМБАБВЕ'), ('ES', 'ИСПАНИЯ'), ('SS', 'ЮЖНЫЙ СУДАН'), ('EH', 'ЗАПАДНАЯ САХАРА'), ('SD', 'СУДАН'), ('SR', 'СУРИНАМ'), ('SJ', 'ШПИЦБЕРГЕН И ЯН МАЙЕН'), ('SZ', 'ЭСВАТИНИ'), ('SE', 'ШВЕЦИЯ'), ('CH', 'ШВЕЙЦАРИЯ'), ('SY', 'СИРИЙСКАЯ АРАБСКАЯ РЕСПУБЛИКА'), ('TJ', 'ТАДЖИКИСТАН'), ('TH', 'ТАИЛАНД'), ('TG', 'ТОГО'), ('TK', 'ТОКЕЛАУ'), ('TO', 'ТОНГА'), ('TT', 'ТРИНИДАД И ТОБАГО'), ('AE', 'ОБЪЕДИНЕННЫЕ АРАБСКИЕ ЭМИРАТЫ'), ('TN', 'ТУНИС'), ('TR', 'ТУРЦИЯ'), ('TM', 'ТУРКМЕНИСТАН'), ('TC', 'ОСТРОВА ТЕРКС И КАЙКОС'), ('TV', 'ТУВАЛУ'), ('UG', 'УГАНДА'), ('UA', 'УКРАИНА'), ('MK', 'РЕСПУБЛИКА МАКЕДОНИЯ'), ('EG', 'ЕГИПЕТ'), ('GB', 'СОЕДИНЕННОЕ КОРОЛЕВСТВО'), ('GG', 'ГЕРНСИ'), ('IM', 'ОСТРОВ МЭН'), ('TZ', 'ТАНЗАНИЯ, ОБЪЕДИНЕННАЯ РЕСПУБЛИКА'), ('US', 'СОЕДИНЕННЫЕ ШТАТЫ'), ('VI', 'ВИРГИНСКИЕ ОСТРОВА (США)'), ('BF', 'БУРКИНА-ФАСО'), ('UY', 'УРУГВАЙ'), ('UZ', 'УЗБЕКИСТАН'), ('VE', 'ВЕНЕСУЭЛА (БОЛИВАРИАНСКАЯ РЕСПУБЛИКА)'), ('WF', 'УОЛЛИС И ФУТУНА'), ('WS', 'САМОА'), ('YE', 'ЙЕМЕН'), ('ZM', 'ЗАМБИЯ'), ('99', 'РАЗНЫЕ')], max_length=2, verbose_name='Страна транспортного средства')),
                ('carrier_name', models.CharField(default='', max_length=100, verbose_name='Перевозчик')),
            ],
            options={
                'verbose_name': 'Транспорт',
                'verbose_name_plural': 'Транспорты',
            },
        ),
        migrations.CreateModel(
            name='TSW',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название склада')),
                ('base_notification_number', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='Базовый номер уведомлений (например, ВЗ/номер_СВХ)')),
            ],
            options={
                'verbose_name': 'Склад временного хранения',
                'verbose_name_plural': 'Склады временного хранения',
            },
        ),
        migrations.CreateModel(
            name='TypePlace',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(verbose_name='Описание')),
                ('max_weight', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Максимальный вес')),
                ('max_size', models.CharField(max_length=100, verbose_name='Максимальный размер')),
                ('type_product', models.CharField(max_length=100, verbose_name='Тип товара')),
                ('type_place', models.CharField(max_length=100, verbose_name='Тип места (европаллет и тд)')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Примечание')),
            ],
            options={
                'verbose_name': 'Тип места',
                'verbose_name_plural': 'Типы мест',
            },
        ),
        migrations.CreateModel(
            name='ActionLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField(verbose_name='ID объекта')),
                ('action', models.CharField(max_length=100, verbose_name='Действие')),
                ('before_state', models.JSONField(blank=True, null=True, verbose_name='Состояние до')),
                ('after_state', models.JSONField(blank=True, null=True, verbose_name='Состояние после')),
                ('datetime', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата и время действия')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype', verbose_name='Тип объекта')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Лог действия',
                'verbose_name_plural': 'Логи действий',
            },
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('create', 'Создание'), ('update', 'Обновление'), ('delete', 'Удаление')], max_length=20, verbose_name='Действие')),
                ('object_id', models.PositiveIntegerField(verbose_name='ID объекта')),
                ('object_repr', models.CharField(max_length=200, verbose_name='Описание объекта')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Время действия')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Журнал аудита',
                'verbose_name_plural': 'Журналы аудита',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='LogBook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(blank=True, choices=[('load', 'Загрузка'), ('unload', 'Выгрузка')], max_length=10, null=True, verbose_name='Статус загрузки/выгрузки')),
                ('carrier_info', models.CharField(max_length=100, verbose_name='ФИО водителя')),
                ('phone', models.CharField(max_length=100, verbose_name='телефон водителя')),
                ('vehicle_number', models.CharField(max_length=100, verbose_name='Номер т/с')),
                ('trailer_number', models.CharField(max_length=100, verbose_name='Номер прицепа')),
                ('seal', models.BooleanField(default=False, verbose_name='Пломба есть/нет')),
                ('seal_quantity', models.CharField(blank=True, max_length=100, null=True, verbose_name='Количество пломб')),
                ('seal_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='Номер пломбы')),
                ('removed_control', models.CharField(choices=[('yes', 'Да'), ('no', 'Нет')], max_length=10, verbose_name='Снято с контроля')),
                ('datetime_in', models.DateTimeField(verbose_name='Дата и время прибытия')),
                ('datetime_out', models.DateTimeField(blank=True, null=True, verbose_name='Дата и время убытия')),
                ('note_in', models.TextField(blank=True, null=True, verbose_name='Примечание при въезде')),
                ('note_out', models.TextField(blank=True, null=True, verbose_name='Примечание при выезде')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Общее примечание')),
                ('user_in', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registered_by_log', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь создал запись')),
                ('user_out', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='removed_by_log', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь закрыл запись')),
            ],
            options={
                'verbose_name': 'Журнал въезда/выезда',
                'verbose_name_plural': 'Журналы въезда/выезда',
            },
        ),
        migrations.CreateModel(
            name='Notice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doc_creation_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата и время создания документа')),
                ('date_in', models.DateField(verbose_name='Дата въезда')),
                ('time_in', models.TimeField(verbose_name='Время въезда')),
                ('gross_weight', models.FloatField(default=0, verbose_name='Вес брутто')),
                ('goods_presence', models.BooleanField(default=False, verbose_name='Наличие товара')),
                ('purpose_placement', models.CharField(choices=[('10', 'Выгрузка (прибытие на склад) товара'), ('11', 'Загрузка (убытие со склада) товара')], default='22', max_length=2, verbose_name='Цель размещения')),
                ('guid', models.CharField(default=uuid.uuid4, max_length=36, unique=True, verbose_name='GUID номер')),
                ('number_out', models.CharField(blank=True, max_length=15, null=True, verbose_name='Исходящий номер')),
                ('notification', models.CharField(blank=True, max_length=25, null=True, verbose_name='Уведомление')),
                ('number_notification', models.CharField(blank=True, max_length=50, null=True, verbose_name='Номер уведомления')),
                ('zhurnal', models.CharField(blank=True, max_length=12, null=True, verbose_name='Журнал')),
                ('stz', models.CharField(blank=True, max_length=1, null=True, verbose_name='СТЗ')),
                ('year', models.CharField(blank=True, max_length=12, null=True, verbose_name='Год')),
                ('fio', models.CharField(blank=True, default='Мартинкевич Сергей Анатольевич', max_length=100, null=True, verbose_name='ФИО ответственного лица')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='notices', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Уведомление',
                'verbose_name_plural': 'Уведомления',
            },
        ),
        migrations.CreateModel(
            name='Doc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doc_code', models.CharField(choices=[('02015', 'Транспортная накладная'), ('02016', 'Иная транспортная накладная, используемая при перевозке товаров автодорожным транспортом\t'), ('04021', 'Счет-фактура (инвойс) к договору'), ('04025', 'Счет-проформа к договору\t'), ('04131', 'Отгрузочный (упаковочный) лист'), ('04023', 'Банковские документы, а также другие платежные документы, отражающие стоимость товара'), ('03011', 'Договор (контракт), заключенный при совершении сделки с товарами'), ('02099', 'Иные транспортные документы')], max_length=5, verbose_name='Код документа')),
                ('doc_number', models.CharField(default='-', max_length=30, verbose_name='Номер документа')),
                ('doc_date', models.DateField(verbose_name='Дата документа')),
                ('notice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='docs', to='core.notice', verbose_name='Уведомление')),
            ],
            options={
                'verbose_name': 'Документ',
                'verbose_name_plural': 'Документы',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transport_type', models.CharField(choices=[('A', 'Автомобильный транспорт'), ('Ж', 'Железнодорожный транспорт')], default='A', max_length=1, verbose_name='Тип транспорта')),
                ('carrier_name', models.CharField(max_length=100, verbose_name='ФИО водителя')),
                ('phone', models.CharField(max_length=20, verbose_name='Телефон водителя')),
                ('vehicle_number', models.CharField(max_length=20, verbose_name='Номер т/с')),
                ('customer', models.CharField(blank=True, max_length=100, null=True, verbose_name='Заказчик')),
                ('status_order', models.CharField(choices=[('0', 'создан'), ('1', 'в работе'), ('2', 'отправлен'), ('4', 'закрыт')], default='0', max_length=2, verbose_name='Статус заказа')),
                ('datetime', models.DateTimeField(verbose_name='Дата и время заказа')),
                ('quantity', models.PositiveIntegerField(verbose_name='Количество товара')),
                ('damage', models.BooleanField(default=False, verbose_name='Повреждение груза')),
                ('damage_description', models.TextField(blank=True, null=True, verbose_name='Описание повреждения')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Примечание')),
                ('logbook', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='orders', to='core.logbook', verbose_name='Журнал въезда/выезда')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='orders', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.supplier', verbose_name='Отправитель / Получатель')),
            ],
            options={
                'verbose_name': 'Заказ',
                'verbose_name_plural': 'Заказы',
            },
        ),
        migrations.AddField(
            model_name='notice',
            name='order',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='notices', to='core.order', verbose_name='Заказ'),
        ),
        migrations.CreateModel(
            name='PlacePark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('spot_number', models.CharField(max_length=50, verbose_name='Номер парковочного места')),
                ('size', models.CharField(blank=True, max_length=50, null=True, verbose_name='Размер')),
                ('is_available', models.BooleanField(default=True, verbose_name='Доступность')),
                ('parking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='places', to='core.parking', verbose_name='Парковка')),
            ],
            options={
                'verbose_name': 'Парковочное место',
                'verbose_name_plural': 'Парковочные места',
            },
        ),
        migrations.AddField(
            model_name='logbook',
            name='place_park',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='log_entries', to='core.placepark'),
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sku', models.CharField(max_length=100, verbose_name='Код товара')),
                ('type_product', models.CharField(max_length=100, verbose_name='Тип товара')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание товара')),
                ('net_weight', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Вес нетто')),
                ('gross_weight', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Вес брутто')),
                ('quantity', models.IntegerField(verbose_name='Количество')),
                ('barcode', models.CharField(max_length=100, verbose_name='Штрихкод')),
                ('quantity_pack', models.IntegerField(verbose_name='Количество паллет (упаковок)')),
                ('datetime_in', models.DateTimeField(verbose_name='Время прибытия товара')),
                ('datetime_out', models.DateTimeField(blank=True, null=True, verbose_name='Время убытия товара')),
                ('size', models.CharField(blank=True, max_length=100, null=True, verbose_name='Размеры товара')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Примечание')),
                ('place', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='core.place', verbose_name='Место хранения')),
            ],
            options={
                'verbose_name': 'Товар',
                'verbose_name_plural': 'Товары',
            },
        ),
        migrations.CreateModel(
            name='LogPlace',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(verbose_name='Количество перемещаемого товара')),
                ('datetime', models.DateTimeField(auto_now_add=True, verbose_name='Дата и время перемещения')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Примечание')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='log_places', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
                ('place_from', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='log_places_from', to='core.place', verbose_name='Место откуда')),
                ('place_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='log_places_to', to='core.place', verbose_name='Место куда')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='log_places', to='core.product', verbose_name='Товар')),
            ],
            options={
                'verbose_name': 'Лог перемещения товара',
                'verbose_name_plural': 'Логи перемещений товара',
            },
        ),
        migrations.CreateModel(
            name='Recipient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Наименование')),
                ('country', models.CharField(max_length=2, verbose_name='Страна')),
                ('notice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipient', to='core.notice', verbose_name='Уведомление')),
            ],
            options={
                'verbose_name': 'Получатель',
                'verbose_name_plural': 'Получатели',
            },
        ),
        migrations.CreateModel(
            name='Transfer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена')),
                ('quantity', models.PositiveIntegerField(verbose_name='Количество')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Примечание')),
                ('type_transfer', models.CharField(max_length=100, verbose_name='Тип трансфера')),
                ('is_fully_transferred', models.BooleanField(default=False, verbose_name='Товар забран полностью')),
                ('order_in', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='transfers_in', to='core.order')),
                ('order_out', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='transfers_out', to='core.order')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='transfers', to='core.product', verbose_name='Товар')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='transfers', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Передача груза',
                'verbose_name_plural': 'Передачи грузов',
            },
        ),
        migrations.CreateModel(
            name='TransportNotice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=100, verbose_name='Номер')),
                ('type', models.CharField(max_length=100, verbose_name='Тип')),
                ('country', models.CharField(blank=True, choices=[('00', 'не определен'), ('AF', 'АФГАНИСТАН'), ('AL', 'АЛБАНИЯ'), ('AQ', 'АНТАРКТИДА'), ('DZ', 'АЛЖИР'), ('AS', 'АМЕРИКАНСКОЕ САМОА'), ('AD', 'АНДОРРА'), ('AO', 'АНГОЛА'), ('AG', 'АНТИГУА И БАРБУДА'), ('AZ', 'АЗЕРБАЙДЖАН'), ('AR', 'АРГЕНТИНА'), ('AU', 'АВСТРАЛИЯ'), ('AT', 'АВСТРИЯ'), ('BS', 'БАГАМЫ'), ('BH', 'БАХРЕЙН'), ('BD', 'БАНГЛАДЕШ'), ('AM', 'АРМЕНИЯ'), ('BB', 'БАРБАДОС'), ('BE', 'БЕЛЬГИЯ'), ('BM', 'БЕРМУДЫ'), ('BT', 'БУТАН'), ('BO', 'БОЛИВИЯ (МНОГОНАЦИОНАЛЬНОЕ ГОСУДАРСТВО)'), ('BA', 'БОСНИЯ И ГЕРЦЕГОВИНА'), ('BW', 'БОТСВАНА'), ('BV', 'ОСТРОВ БУВЕ'), ('BR', 'БРАЗИЛИЯ'), ('BZ', 'БЕЛИЗ'), ('IO', 'БРИТАНСКАЯ ТЕРРИТОРИЯ В ИНДИЙСКОМ ОКЕАНЕ'), ('SB', 'СОЛОМОНОВЫ ОСТРОВА'), ('VG', 'ВИРГИНСКИЕ ОСТРОВА (БРИТАНСКИЕ)'), ('BN', 'БРУНЕЙ-ДАРУССАЛАМ'), ('BG', 'БОЛГАРИЯ'), ('MM', 'МЬЯНМА'), ('BI', 'БУРУНДИ'), ('EU', 'ЕВРОСОЮЗ'), ('BY', 'БЕЛАРУСЬ'), ('KH', 'КАМБОДЖА'), ('CM', 'КАМЕРУН'), ('CA', 'КАНАДА'), ('CV', 'КАБО-ВЕРДЕ'), ('KY', 'ОСТРОВА КАЙМАН'), ('CF', 'ЦЕНТРАЛЬНО-АФРИКАНСКАЯ РЕСПУБЛИКА'), ('LK', 'ШРИ-ЛАНКА'), ('TD', 'ЧАД'), ('CL', 'ЧИЛИ'), ('CN', 'КИТАЙ'), ('TW', 'ТАЙВАНЬ (КИТАЙ)'), ('CX', 'ОСТРОВ РОЖДЕСТВА'), ('CC', 'КОКОСОВЫЕ (КИЛИНГ) ОСТРОВА'), ('CO', 'КОЛУМБИЯ'), ('KM', 'КОМОРЫ'), ('YT', 'МАЙОТТА'), ('CG', 'КОНГО'), ('CD', 'КОНГО, ДЕМОКРАТИЧЕСКАЯ РЕСПУБЛИКА'), ('CK', 'ОСТРОВА КУКА'), ('CR', 'КОСТА-РИКА'), ('HR', 'ХОРВАТИЯ'), ('CU', 'КУБА'), ('CY', 'КИПР'), ('CZ', 'ЧЕХИЯ'), ('BJ', 'БЕНИН'), ('DK', 'ДАНИЯ'), ('DM', 'ДОМИНИКА'), ('DO', 'ДОМИНИКАНСКАЯ РЕСПУБЛИКА'), ('EC', 'ЭКВАДОР'), ('SV', 'ЭЛЬ-САЛЬВАДОР'), ('GQ', 'ЭКВАТОРИАЛЬНАЯ ГВИНЕЯ'), ('ET', 'ЭФИОПИЯ'), ('ER', 'ЭРИТРЕЯ'), ('EE', 'ЭСТОНИЯ'), ('FO', 'ФАРЕРСКИЕ ОСТРОВА'), ('FK', 'ФОЛКЛЕНДСКИЕ ОСТРОВА (МАЛЬВИНСКИЕ)'), ('GS', 'ЮЖН.ДЖОРДЖИЯ И ЮЖН.САНДВИЧ.ОСТРОВА'), ('FJ', 'ФИДЖИ'), ('FI', 'ФИНЛЯНДИЯ'), ('AX', 'ЭЛАНДСКИЕ ОСТРОВА'), ('FR', 'ФРАНЦИЯ'), ('GF', 'ФРАНЦУЗСКАЯ ГВИАНА'), ('PF', 'ФРАНЦУЗСКАЯ ПОЛИНЕЗИЯ'), ('TF', 'ФРАНЦУЗСКИЕ ЮЖНЫЕ ТЕРРИТОРИИ'), ('DJ', 'ДЖИБУТИ'), ('GA', 'ГАБОН'), ('GE', 'ГРУЗИЯ'), ('GM', 'ГАМБИЯ'), ('PS', 'ПАЛЕСТИНА, ГОСУДАРСТВО'), ('DE', 'ГЕРМАНИЯ'), ('GH', 'ГАНА'), ('GI', 'ГИБРАЛТАР'), ('KI', 'КИРИБАТИ'), ('GR', 'ГРЕЦИЯ'), ('GL', 'ГРЕНЛАНДИЯ'), ('GD', 'ГРЕНАДА'), ('GP', 'ГВАДЕЛУПА'), ('GU', 'ГУАМ'), ('GT', 'ГВАТЕМАЛА'), ('GN', 'ГВИНЕЯ'), ('GY', 'ГАЙАНА'), ('HT', 'ГАИТИ'), ('HM', 'ОСТРОВ ХЕРД И ОСТРОВА МАКДОНАЛЬД'), ('VA', 'ПАПСКИЙ ПРЕСТОЛ(ГОС.-ГОРОД ВАТИКАН)'), ('HN', 'ГОНДУРАС'), ('HK', 'ГОНКОНГ'), ('HU', 'ВЕНГРИЯ'), ('IS', 'ИСЛАНДИЯ'), ('IN', 'ИНДИЯ'), ('ID', 'ИНДОНЕЗИЯ'), ('IR', 'ИРАН (ИСЛАМСКАЯ РЕСПУБЛИКА)'), ('IQ', 'ИРАК'), ('IE', 'ИРЛАНДИЯ'), ('IL', 'ИЗРАИЛЬ'), ('IT', 'ИТАЛИЯ'), ('CI', 'КОТ Д_ИВУАР'), ('JM', 'ЯМАЙКА'), ('JP', 'ЯПОНИЯ'), ('KZ', 'КАЗАХСТАН'), ('JO', 'ИОРДАНИЯ'), ('KE', 'КЕНИЯ'), ('KP', 'КОРЕЯ (НАРОДНО-ДЕМОКРАТИЧ. РЕСПУБЛИКА)'), ('KR', 'КОРЕЯ, РЕСПУБЛИКА'), ('KW', 'КУВЕЙТ'), ('KG', 'КЫРГЫЗСТАН'), ('LA', 'ЛАОССКАЯ НАРОДНО-ДЕМОКРАТИЧ. РЕСПУБЛИКА'), ('LB', 'ЛИВАН'), ('LS', 'ЛЕСОТО'), ('LV', 'ЛАТВИЯ'), ('LR', 'ЛИБЕРИЯ'), ('LY', 'ЛИВИЯ'), ('LI', 'ЛИХТЕНШТЕЙН'), ('LT', 'ЛИТВА'), ('LU', 'ЛЮКСЕМБУРГ'), ('MO', 'МАКАО'), ('MG', 'МАДАГАСКАР'), ('MW', 'МАЛАВИ'), ('MY', 'МАЛАЙЗИЯ'), ('MV', 'МАЛЬДИВЫ'), ('ML', 'МАЛИ'), ('MT', 'МАЛЬТА'), ('MQ', 'МАРТИНИКА'), ('MR', 'МАВРИТАНИЯ'), ('MU', 'МАВРИКИЙ'), ('MX', 'МЕКСИКА'), ('MC', 'МОНАКО'), ('MN', 'МОНГОЛИЯ'), ('MD', 'МОЛДОВА, РЕСПУБЛИКА'), ('ME', 'ЧЕРНОГОРИЯ'), ('MS', 'МОНТСЕРРАТ'), ('MA', 'МАРОККО'), ('MZ', 'МОЗАМБИК'), ('OM', 'ОМАН'), ('NA', 'НАМИБИЯ'), ('NR', 'НАУРУ'), ('NP', 'НЕПАЛ'), ('NL', 'НИДЕРЛАНДЫ'), ('CW', 'КЮРАСАО'), ('AW', 'АРУБА'), ('SX', 'СЕН-МАРТЕН (нидерландская часть)'), ('BQ', 'БОНЭЙР, СИНТ-ЭСТАТИУС И САБА'), ('NC', 'НОВАЯ КАЛЕДОНИЯ'), ('VU', 'ВАНУАТУ'), ('NZ', 'НОВАЯ ЗЕЛАНДИЯ'), ('NI', 'НИКАРАГУА'), ('NE', 'НИГЕР'), ('NG', 'НИГЕРИЯ'), ('NU', 'НИУЭ'), ('NF', 'ОСТРОВ НОРФОЛК'), ('NO', 'НОРВЕГИЯ'), ('MP', 'СЕВЕРНЫЕ МАРИАНСКИЕ ОСТРОВА'), ('UM', 'МАЛЫЕ ТИХООКЕАН.ОТДАЛЕН.ОСТ-ВА С.Ш.'), ('FM', 'МИКРОНЕЗИЯ (ФЕДЕРАТИВНЫЕ ШТАТЫ)'), ('MH', 'МАРШАЛЛОВЫ ОСТРОВА'), ('PW', 'ПАЛАУ'), ('PK', 'ПАКИСТАН'), ('PA', 'ПАНАМА'), ('PG', 'ПАПУА НОВАЯ ГВИНЕЯ'), ('PY', 'ПАРАГВАЙ'), ('PE', 'ПЕРУ'), ('PH', 'ФИЛИППИНЫ'), ('PN', 'ПИТКЭРН'), ('PL', 'ПОЛЬША'), ('PT', 'ПОРТУГАЛИЯ'), ('GW', 'ГВИНЕЯ-БИСАУ'), ('TL', 'ТИМОР-ЛЕСТЕ'), ('PR', 'ПУЭРТО-РИКО'), ('QA', 'КАТАР'), ('RE', 'РЕЮНЬОН'), ('RO', 'РУМЫНИЯ'), ('RU', 'РОССИЯ'), ('RW', 'РУАНДА'), ('BL', 'СЕН-БАРТЕЛЕМИ'), ('SH', 'СВ. ЕЛЕНА, О. ВОЗНЕСЕНИЯ, ТР.-ДА-КУНЬЯ'), ('KN', 'СЕНТ-КИТС И НЕВИС'), ('AI', 'АНГИЛЬЯ'), ('LC', 'СЕНТ-ЛЮСИЯ'), ('MF', 'СЕН-МАРТЕН (ФРАНЦУЗСКАЯ ЧАСТЬ)'), ('PM', 'СЕНТ-ПЬЕР И МИКЕЛОН'), ('VC', 'СЕНТ-ВИНСЕНТ И ГРЕНАДИНЫ'), ('SM', 'САН-МАРИНО'), ('ST', 'САН-ТОМЕ И ПРИНСИПИ'), ('SA', 'САУДОВСКАЯ АРАВИЯ'), ('SN', 'СЕНЕГАЛ'), ('RS', 'СЕРБИЯ'), ('SC', 'СЕЙШЕЛЫ'), ('SL', 'СЬЕРРА-ЛЕОНЕ'), ('SG', 'СИНГАПУР'), ('SK', 'СЛОВАКИЯ'), ('VN', 'ВЬЕТНАМ'), ('SI', 'СЛОВЕНИЯ'), ('SO', 'СОМАЛИ'), ('ZA', 'ЮЖНАЯ АФРИКА'), ('ZW', 'ЗИМБАБВЕ'), ('ES', 'ИСПАНИЯ'), ('SS', 'ЮЖНЫЙ СУДАН'), ('EH', 'ЗАПАДНАЯ САХАРА'), ('SD', 'СУДАН'), ('SR', 'СУРИНАМ'), ('SJ', 'ШПИЦБЕРГЕН И ЯН МАЙЕН'), ('SZ', 'ЭСВАТИНИ'), ('SE', 'ШВЕЦИЯ'), ('CH', 'ШВЕЙЦАРИЯ'), ('SY', 'СИРИЙСКАЯ АРАБСКАЯ РЕСПУБЛИКА'), ('TJ', 'ТАДЖИКИСТАН'), ('TH', 'ТАИЛАНД'), ('TG', 'ТОГО'), ('TK', 'ТОКЕЛАУ'), ('TO', 'ТОНГА'), ('TT', 'ТРИНИДАД И ТОБАГО'), ('AE', 'ОБЪЕДИНЕННЫЕ АРАБСКИЕ ЭМИРАТЫ'), ('TN', 'ТУНИС'), ('TR', 'ТУРЦИЯ'), ('TM', 'ТУРКМЕНИСТАН'), ('TC', 'ОСТРОВА ТЕРКС И КАЙКОС'), ('TV', 'ТУВАЛУ'), ('UG', 'УГАНДА'), ('UA', 'УКРАИНА'), ('MK', 'РЕСПУБЛИКА МАКЕДОНИЯ'), ('EG', 'ЕГИПЕТ'), ('GB', 'СОЕДИНЕННОЕ КОРОЛЕВСТВО'), ('GG', 'ГЕРНСИ'), ('IM', 'ОСТРОВ МЭН'), ('TZ', 'ТАНЗАНИЯ, ОБЪЕДИНЕННАЯ РЕСПУБЛИКА'), ('US', 'СОЕДИНЕННЫЕ ШТАТЫ'), ('VI', 'ВИРГИНСКИЕ ОСТРОВА (США)'), ('BF', 'БУРКИНА-ФАСО'), ('UY', 'УРУГВАЙ'), ('UZ', 'УЗБЕКИСТАН'), ('VE', 'ВЕНЕСУЭЛА (БОЛИВАРИАНСКАЯ РЕСПУБЛИКА)'), ('WF', 'УОЛЛИС И ФУТУНА'), ('WS', 'САМОА'), ('YE', 'ЙЕМЕН'), ('ZM', 'ЗАМБИЯ'), ('99', 'РАЗНЫЕ')], max_length=2, verbose_name='страна транспортного средства')),
                ('notice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transport_notice', to='core.notice', verbose_name='Уведомление')),
            ],
            options={
                'verbose_name': 'Транспорт-Уведомление',
                'verbose_name_plural': 'Транспорты-Уведомления',
            },
        ),
        migrations.AddField(
            model_name='place',
            name='type_place',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.typeplace'),
        ),
        migrations.CreateModel(
            name='Warehouse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название склада')),
                ('svh_number', models.CharField(blank=True, help_text='Номер СВХ для склада', max_length=50, null=True, verbose_name='Номер СВХ')),
                ('address', models.CharField(max_length=100, verbose_name='Адрес склада')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Примечание')),
                ('customs_post', models.CharField(blank=True, max_length=100, null=True, verbose_name='Номер поста таможни')),
                ('name_post', models.CharField(blank=True, max_length=100, null=True, verbose_name='Название поста')),
                ('TSW', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.tsw', verbose_name='Склад временного хранения')),
                ('place', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='warehouses', to='core.place', verbose_name='Места складирования')),
            ],
            options={
                'verbose_name': 'Склад',
                'verbose_name_plural': 'Склады',
            },
        ),
        migrations.CreateModel(
            name='Ramp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=100, verbose_name='Описание рампы')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Примечание')),
                ('status_ramp', models.CharField(choices=[('free', 'Свободно'), ('occupied', 'Занято')], max_length=20, verbose_name='Статус занято / не занято')),
                ('warehouse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ramps', to='core.warehouse', verbose_name='Склад')),
            ],
            options={
                'verbose_name': 'Рампа',
                'verbose_name_plural': 'Рампы',
            },
        ),
        migrations.AddField(
            model_name='parking',
            name='warehouse',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parkings', to='core.warehouse', verbose_name='Склад'),
        ),
        migrations.AddField(
            model_name='order',
            name='warehouse',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='core.warehouse', verbose_name='Склад'),
        ),
        migrations.AddField(
            model_name='logbook',
            name='warehouse',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='log_entries', to='core.warehouse', verbose_name='Склад'),
        ),
    ]
